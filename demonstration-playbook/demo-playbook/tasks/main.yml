---
- name: 1 - Display a secret from BWS
  ansible.builtin.debug:
    msg: "Secret: {{ lookup('bitwarden.secrets.lookup', 'bcd19f3b-5610-4041-b4b7-b20900c2493d') }}"

- name: 2 - Display a variable from ansible, overwrite if present in BWS
  block:
    - name: Attempt to set ansible var from BWS
      ansible.builtin.set_fact:
        # Either provide or do not provide a valid SM lookup below
        secret: "{{ lookup('bitwarden.secrets.lookup', 'bcd19f3b-5610-4041-b4b7-b20900c2493d', errors='ignore') | default('') }}"
        # secret: "{{ lookup('bitwarden.secrets.lookup', '', errors='ignore') | default('') }}"
        default: "noreply@atjb.link"
      ignore_errors: true # is this also necessary???

    - name: Set final_secret depending on existance of secret in BWS
      ansible.builtin.set_fact:
        final_secret: " {{ secret if secret != '' else default }}"

    - name: Debug to check if secret was retrieved or not
      ansible.builtin.debug:
        msg: "The secret is {{ final_secret }}"

- name: 3 - Write a file with a secret injected
  block:
    - name: Copy a file to a location
      ansible.builtin.copy:
        src: ./files/example.txt
        dest: ~/Desktop/example.txt
        owner: "{{ ansible_user_id }}"
        mode: "0644"

    - name: Inject a secret into this file
      ansible.builtin.lineinfile:
        path: ~/Desktop/example.txt
        line: "Secret: {{ lookup('bitwarden.secrets.lookup', 'bcd19f3b-5610-4041-b4b7-b20900c2493d') }}"

- name: 4 - Write a file with multiple secrets injected
  block:
    - name: Create a dictionary of secrets
      ansible.builtin.set_fact:
        dictionary: >-
          {{
            dictionary | default ({}) |
            combine ({ item.key: lookup('bitwarden.secrets.lookup', item.value )})
          }}
      loop:
        - {
            key: "first_secret",
            value: "{{ vars['example']['bws-secrets']['secret1'] }}",
          }
        - {
            key: "second_secret",
            value: "{{ vars['example']['bws-secrets']['secret2'] }}",
          }

    - name: Inject secrets into a Jinja2 template and copy it to destination
      ansible.builtin.template:
        src: ./templates/template.j2
        dest: ~/Desktop/injected_secrets.txt
        owner: "{{ ansible_user_id }}"
        mode: "0644"
      vars:
        first_secret: "{{ dictionary.first_secret }}"
        second_secret: "{{ dictionary.second_secret }}"
        foo: "{{ vars['example']['ansible-vars']['example_var_name'] }}"

...
